From 27308e0c58dd6b5df52678da84069e1b194cc767 Mon Sep 17 00:00:00 2001
From: Leo Shen <i@szclsya.me>
Date: Fri, 24 Jan 2025 10:19:46 -0500
Subject: [PATCH 1/3] qnx: allow alternative prefix other than /usr

- since we use /system internally
---
 Makefile        |   2 +-
 abuild.in       | 211 +++++++++++++++++++-----------------------------
 functions.sh.in |  12 ++-
 3 files changed, 92 insertions(+), 133 deletions(-)

diff --git a/Makefile b/Makefile
index 08ae99a..586b35d 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,7 @@
 PACKAGE		:= abuild
 VERSION		:= 3.14.1
 
-prefix		?= /usr
+prefix		?= /usr/local
 bindir		?= $(prefix)/bin
 sysconfdir	?= /etc
 sharedir		?= $(prefix)/share/$(PACKAGE)
diff --git a/abuild.in b/abuild.in
index 3eec399..d5394f5 100644
--- a/abuild.in
+++ b/abuild.in
@@ -1,4 +1,4 @@
-#!/bin/ash -e
+#!/usr/bin/busybox ash
 # vim: set filetype=sh:
 
 # abuild - build apk packages (light version of makepkg)
@@ -8,8 +8,11 @@
 # Distributed under GPL-2.0-only
 #
 
+set -e
+
 program_version=@VERSION@
 sharedir=${ABUILD_SHAREDIR:-@sharedir@}
+# TARGET_PREFIX defined in functions.sh
 
 abuild_path=$(readlink -f $0)
 
@@ -782,8 +785,17 @@ postcheck() {
 	local dir="$1" name="$2" i= j= e=0
 	msg "Running postcheck for $name"
 	# checking for FHS compat
-	if ! options_has "!fhs"; then
-		for i in srv usr/local opt tmp var/tmp var/lock var/empty home sys proc mnt dev; do
+    # QNX: check for mkqnximage compat
+	if ! options_has "!qnx"; then
+        # We put /usr stuff under /system
+        for i in $FORBIDDEN_PREFIX; do
+            if [ -d "$dir/$i" ]; then
+                error "Package must not have forbidden path $i"
+                e=1
+                break
+            fi
+        done
+		for i in srv usr opt tmp var/tmp var/lock var/empty home sys proc mnt dev lib lib64; do
 			for j in "$dir"/"$i"/* "$dir"/"$i"/.[!.]* "$dir"/"$i"/..?*; do
 				if [ -L "$j" ] || [ -e "$j" ]; then
 					error "Packages must not put anything under /$i"
@@ -792,31 +804,14 @@ postcheck() {
 				fi
 			done
 		done
-		if [ -d "$dir"/usr/var ]; then
-			error "Found /usr/var, localstatedir is most likely wrong"
-			e=1
-		fi
-	fi
-
-	# Alpine Linux as a musl libc distro does not use /lib64 or /usr/lib64 under
-	# any circumstance, packages installing to it are 100% sure a packaging error
-	# except when we are doing GNU Libc compatibility which should be rare enough
-	# to warrant a lib64 check
-	if ! options_has "lib64"; then
-		if [ -e "$dir"/lib64 ]; then
-			error "Packages must not put anything under /lib64, use /usr/lib instead"
-			e=1
-		elif [ -e "$dir"/usr/lib64 ]; then
-			error "Packages must not put anything under /usr/lib64, use /usr/lib instead"
+		if [ -d "$dir"/$TARGET_PREFIX/var ]; then
+			error "Found /$TARGET_PREFIX/var, localstatedir is most likely wrong"
 			e=1
 		fi
-	fi
-
-	# /usr merge
-	if ! options_has "!usrmerge"; then
+	    # /usr merge
 		for i in bin sbin lib; do
 			if [ -L "$dir"/$i ] || [ -e "$dir"/$i ]; then
-				warning "Packages must not put anything under /$i, use /usr/${i##*s} instead"
+				warning "Packages must not put anything under /$i, use /$TARGET_PREFIX/${i##*s} instead"
 			fi
 		done
 	fi
@@ -826,34 +821,23 @@ postcheck() {
 		find "$dir" -name '*.la' -type f -delete
 	fi
 
-	# look for /usr/lib/charset.alias
-	if [ -e "$dir"/usr/lib/charset.alias ] \
-			&& ! options_has "charset.alias"; then
-		error "Found /usr/lib/charset.alias"
-		e=1
-	fi
-	# look for /etc/init.d and /etc/conf.d
-	if [ -e "$dir"/etc/init.d -o -e "$dir"/etc/conf.d ] \
-			&& ! is_openrc_pkg "$name"; then
-		warning "Found OpenRC directory (/etc/conf.d or /etc/init.d) but name doesn't end with -openrc"
-	fi
 	# look for /usr/share/doc
-	if [ -e "$dir"/usr/share/doc ] \
+	if [ -e "$dir"/$TARGET_PREFIX/share/doc ] \
 			&& ! is_doc_pkg "$name"; then
-		warning "Found /usr/share/doc but package name doesn't end with -doc"
+		warning "Found /$TARGET_PREFIX/share/doc but package name doesn't end with -doc"
 	fi
 	# look for /usr/share/devhelp
-	if [ -e "$dir"/usr/share/devhelp ] \
+	if [ -e "$dir"/$TARGET_PREFIX/share/devhelp ] \
 			&& ! is_devhelp_pkg "$name"; then
-		warning "Found /usr/share/devhelp but package name doesn't end with -devhelp"
+		warning "Found /$TARGET_PREFIX/share/devhelp but package name doesn't end with -devhelp"
 	fi
 	# look for /usr/share/man
-	if [ -e "$dir"/usr/share/man ]; then
+	if [ -e "$dir"/$TARGET_PREFIX/share/man ]; then
 		if ! is_doc_pkg "$name"; then
-			warning "Found /usr/share/man but package name doesn't end with -doc"
+			warning "Found /$TARGET_PREFIX/share/man but package name doesn't end with -doc"
 		fi
 		# check for uncompressed man pages
-		i=$(find "$dir"/usr/share/man -name '*.[0-8]' -type f | sed -e 's/^/\t/')
+		i=$(find "$dir"/$TARGET_PREFIX/share/man -name '*.[0-8]' -type f | sed -e 's/^/\t/')
 		if [ -n "$i" ]; then
 			error "Found uncompressed man pages:"
 			echo "$i"
@@ -863,7 +847,7 @@ postcheck() {
 	# look for pycache
 	# wildcard should always get the system python dir, and this is faster than
 	# trying to calculate the python version.
-	i="$(find "$dir"/usr/lib/python* \( -type d -a -name "__pycache__" \) 2>/dev/null || :)"
+	i="$(find "$dir"/$TARGET_PREFIX/lib/python* \( -type d -a -name "__pycache__" \) 2>/dev/null || :)"
 	if [ -n "$i" ] && [ "${name%-pyc}" = "$name" ]; then
 		warning "Found __pycache__ but package name doesn't end with -pyc"
 	fi
@@ -900,20 +884,6 @@ postcheck() {
 			e=1
 		fi
 	fi
-	# test capabilities on executables
-	# see: https://gitlab.alpinelinux.org/alpine/tsc/-/issues/45
-	getcap -r "$dir" | (local r=true execothers; while read -r line; do
-		local filename="${line% *}"
-		if ! options_has "setcap"; then
-			error "Found binary with extra capabilities: $filename"
-			r=false
-		fi
-
-		execothers="$(find "$filename" -perm -o+x)"
-		if [ -n "$execothers" ]; then
-			warning "Found setcap binary executable by others: $filename"
-		fi
-	done; $r) || e=1
 
 	# test for textrels
 	if ! options_has "textrels"; then
@@ -949,25 +919,25 @@ prepare_subpackages() {
 	done
 	postcheck "$pkgdir" "$pkgname" || return 1
 	# post check for /usr/share/locale
-	if [ -d "$pkgdir"/usr/share/locale ]; then
-		warning "Found /usr/share/locale"
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/locale ]; then
+		warning "Found /$TARGET_PREFIX/share/locale"
 		warning2 "Maybe add \$pkgname-lang to subpackages?"
 	fi
 	# post check for shell completions
-	if [ -d "$pkgdir"/usr/share/bash-completion ]; then
-		warning "Found /usr/share/bash-completion"
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/bash-completion ]; then
+		warning "Found /$TARGET_PREFIX/share/bash-completion"
 		warning2 "Add \$pkgname-bash-completion to subpackages"
 	fi
-	if [ -d "$pkgdir"/usr/share/zsh/site-functions ]; then
-		warning "Found /usr/share/zsh/site-functions"
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/zsh/site-functions ]; then
+		warning "Found /$TARGET_PREFIX/share/zsh/site-functions"
 		warning2 "Add \$pkgname-zsh-completion to subpackages"
 	fi
-	if [ -d "$pkgdir"/usr/share/fish/completions ]; then
-		warning "Found /usr/share/fish/completions"
-		warning2 "fish completions for programs should be located in /usr/share/fish/vendor_completions.d"
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/fish/completions ]; then
+		warning "Found /$TARGET_PREFIX/share/fish/completions"
+		warning2 "fish completions for programs should be located in /$TARGET_PREFIX/share/fish/vendor_completions.d"
 	fi
-	if [ -d "$pkgdir"/usr/share/fish/vendor_completions.d ]; then
-		warning "Found /usr/share/fish/completions"
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/fish/vendor_completions.d ]; then
+		warning "Found /$TARGET_PREFIX/share/fish/completions"
 		warning2 "Add \$pkgname-fish-completion to subpackages"
 	fi
 }
@@ -977,7 +947,7 @@ default_lang() {
 	install_if="$pkgname=$pkgver-r$pkgrel lang"
 	depends="$depends_lang"
 
-	amove ${langdir:-/usr/share/locale}
+	amove ${langdir:-/$TARGET_PREFIX/share/locale}
 }
 
 lang() {
@@ -1265,9 +1235,9 @@ prepare_trace_rpaths() {
 			printf("%s\n", $i);
 		}
 	}' | sort -u >"$controldir"/.rpaths
-	if grep -q -x '/usr/lib' "$controldir"/.rpaths; then
+	if grep -q -x "/$TARGET_PREFIX/lib" "$controldir"/.rpaths; then
 		# FIXME silence warning when $ORIGIN was used
-		warning "Redundant /usr/lib in rpath found"
+		warning "Redundant /$TARGET_PREFIX/lib in rpath found"
 	fi
 	if grep '^/home/' "$controldir"/.rpaths; then
 		error "Has /home/... in rpath"
@@ -1293,12 +1263,12 @@ prepare_pkgconfig_provides() {
 	local dir="${subpkgdir:-$pkgdir}" v
 	options_has "!tracedeps" && return 0
 	cd "$dir" || return 1
-	for i in usr/lib/pkgconfig/*.pc usr/share/pkgconfig/*.pc; do
+	for i in "$TARGET_PREFIX"/lib/pkgconfig/*.pc "$TARGET_PREFIX"/share/pkgconfig/*.pc; do
 		if ! [ -e "$i" ]; then
 			continue
 		fi
 		local f=${i##*/}
-		v=$(PKG_CONFIG_PATH="$dir"/usr/lib/pkgconfig:"$dir"/usr/share/pkgconfig \
+		v=$(PKG_CONFIG_PATH="$dir"/"$TARGET_PREFIX"/lib/pkgconfig:"$dir"/"$TARGET_PREFIX"/share/pkgconfig \
 			PKG_CONFIG_MAXIMUM_TRAVERSE_DEPTH=1 pkg-config \
 			--modversion ${f%.pc} | sed -E -e 's/-(alpha|beta|rc|pre)/_\1/')
 		v=${v#v}
@@ -1311,7 +1281,7 @@ prepare_command_provides() {
 	local dir="${subpkgdir:-$pkgdir}"
 	options_has "!tracedeps" && return 0
 	cd "$dir" || return 1
-	for i in bin/* sbin/* usr/bin/* usr/sbin/*; do
+	for i in bin/* sbin/* "$TARGET_PREFIX"/bin/* "$TARGET_PREFIX"/sbin/*; do
 		# We can't check symlinks properly with absolute paths,
 		# subpackages and dependencies so assume that they are commands
 		if ! [ -L "$i" ]; then
@@ -1339,7 +1309,7 @@ prepare_py_provides() {
 	# Find all directories under site-packages, ignore __pycache__ and
 	# .egg-info packages, store the basename with the proper pyX.Y prefix
 	# one per-line
-	py_providers="$(find 'usr/lib/python'*/site-packages \
+	py_providers="$(find $TARGET_PREFIX'/lib/python'*/site-packages \
 		-mindepth 1 -maxdepth 1 \
 		-type f -iname '*.py' -o -type d \
 		-print0 \
@@ -1359,7 +1329,7 @@ prepare_py_provides() {
 		# Find out which version of python we are building for
 		# this will find out by looking at the MAJOR and MINOR
 		# versions in /usr/lib/pythonMAJOR.MINOR
-		pyver="${d##*usr/lib/python}"
+		pyver="${d##*$TARGET_PREFIX/lib/python}"
 		pyver="${pyver%%/*}"
 
 		# Strip the .py prefix if it exists
@@ -1464,7 +1434,7 @@ find_so_files() {
 	rpaths=$(cat "$1")
 	shift
 	while [ $# -gt 0 ]; do
-		real_so_path "$1" /usr/lib /lib $rpaths || return 1
+		real_so_path "$1" /$TARGET_PREFIX/lib /lib $rpaths || return 1
 		shift
 	done
 	return 0
@@ -1503,25 +1473,11 @@ trace_apk_deps() {
 
 	msg "Tracing dependencies..."
 	# add pkgconfig if usr/lib/pkgconfig is found
-	if [ -d "$pkgbasedir"/$name/usr/lib/pkgconfig ] || [ -d "$pkgbasedir"/$name/usr/share/pkgconfig ] \
+	if [ -d "$pkgbasedir"/$name/$TARGET_PREFIX/lib/pkgconfig ] || [ -d "$pkgbasedir"/$name/$TARGET_PREFIX/share/pkgconfig ] \
 			&& ! grep -q '^depend = pkgconfig' "$dir"/.PKGINFO; then
 		autodeps="$autodeps pkgconfig"
 	fi
 
-	[ -f "$dir"/.needs-so ] && for i in $(cat "$dir"/.needs-so); do
-		# first check if its provided by same apkbuild
-		grep -q -w "^$sonameprefix$i" "$dir"/.provides-so 2>/dev/null && continue
-
-		if subpkg_provides_prefixed_so "$i"; then
-			autodeps="$autodeps so:$sonameprefix$i"
-		elif subpkg_provides_so "$i" \
-				|| $APK $apkroot info --quiet --installed "so:$i"; then
-			autodeps="$autodeps so:$i"
-		else
-			missing="$missing $i"
-		fi
-	done
-
 	# find all packages that holds the so files
 	if [ -f "$dir"/.rpaths ]; then
 		local so_files
@@ -1566,7 +1522,7 @@ trace_apk_deps() {
 		else
 			warning "Could not find any provider for pc:$i"
 			for d in share lib; do
-				local pcfile=/usr/$d/pkgconfig/"${i%%[<>=]*}".pc
+				local pcfile=/$TARGET_PREFIX/$d/pkgconfig/"${i%%[<>=]*}".pc
 				if [ -e "$pcfile" ]; then
 					owner=$($APK $apkroot info --quiet --who-owns $pcfile)
 					warning "${owner:-package providing $pcfile} needs to be rebuilt"
@@ -1576,11 +1532,6 @@ trace_apk_deps() {
 	done
 
 	echo "# automatically detected:" >> "$dir"/.PKGINFO
-	if [ -f "$dir"/.provides-so ]; then
-		sed 's/^\(.*\) \([0-9].*\)/provides = so:\1=\2/' \
-			"$dir"/.provides-so | sort -u \
-			>> "$dir"/.PKGINFO
-	fi
 	if [ -f "$dir"/.provides-pc ]; then
 		sed 's/^/provides = pc:/' "$dir"/.provides-pc | sort -u \
 			>> "$dir"/.PKGINFO
@@ -1603,7 +1554,7 @@ trace_apk_deps() {
 
 find_scanelf_paths() {
 	local datadir="$1"
-	local paths="$datadir/lib:$datadir/usr/lib" i= rpaths=
+	local paths="$datadir/lib:$datadir/$TARGET_PREFIX/lib" i= rpaths=
 	if [ -n "$ldpath" ]; then
 		paths="$paths:$(echo "${datadir}${ldpath}" | sed "s|:|:$datadir|g")"
 	fi
@@ -1747,7 +1698,7 @@ scan_python3_dependency() {
 	local controldir="$2" datadir="$3"
 	local dir_count=0
 	local site_pkg_dir
-	for site_pkg_dir in "$datadir"/usr/lib/python3*/site-packages; do
+	for site_pkg_dir in "$datadir"/"$TARGET_PREFIX"/lib/python3*/site-packages; do
 		if ! [ -d "$site_pkg_dir" ]; then
 			# empty iteration
 			continue
@@ -1757,7 +1708,7 @@ scan_python3_dependency() {
 			error "package contains python3 modules for conflicting python3 versions"
 			return 1
 		fi
-		local pyver="${site_pkg_dir##*usr/lib/python}"
+		local pyver="${site_pkg_dir##*$TARGET_PREFIX/lib/python}"
 		pyver="${pyver%%/*}"
 		if [ -n "$pyver" ] && [ "${subpkgname:-$pkgname}" != python3 ]; then
 			echo "python3~$pyver" \
@@ -1774,7 +1725,7 @@ scan_pkgconfig_depends() {
 	name="$(pkginfo_val pkgname "$controldir"/.PKGINFO)"
 	datadir="$pkgbasedir"/$name
 	for i in $(sort -u "$provides_pc"); do
-		PKG_CONFIG_PATH="$datadir"/usr/lib/pkgconfig:"$datadir"/usr/share/pkgconfig \
+		PKG_CONFIG_PATH="$datadir"/"$TARGET_PREFIX"/lib/pkgconfig:"$datadir"/"$TARGET_PREFIX"/share/pkgconfig \
 				pkg-config \
 				--print-requires \
 				--print-requires-private ${i%=*} \
@@ -1807,10 +1758,10 @@ create_apks() {
 	local file= dir= name= ver= apk= datadir= size= i= gzip=
 	gzip=$(command -v pigz || echo gzip)
 	if ! options_has "keepdirs"; then
-		rmdir "$pkgdir"/usr/lib \
-			"$pkgdir"/usr/bin \
-			"$pkgdir"/usr/share \
-			"$pkgdir"/usr \
+		rmdir "$pkgdir"/"$TARGET_PREFIX"/lib \
+			"$pkgdir"/"$TARGET_PREFIX"/bin \
+			"$pkgdir"/"$TARGET_PREFIX"/share \
+			"$pkgdir"/"$TARGET_PREFIX" \
 			"$pkgdir"/etc/ \
 			"$pkgdir"/lib/ \
 			2>/dev/null || :
@@ -1980,11 +1931,11 @@ default_doc() {
 
 	local i
 	for i in doc man info html sgml licenses gtk-doc ri help; do
-		amove usr/share/"$i" || :
+		amove "$TARGET_PREFIX"/share/"$i" || :
 	done
 
 	# compress man pages
-	local mandir="$subpkgdir"/usr/share/man
+	local mandir="$subpkgdir"/"$TARGET_PREFIX"/share/man
 	[ -d "$mandir" ] && find "$mandir" -type l \
 		-a \( -name \*.[0-9n] -o -name \*.[0-9n][a-z]* \) \
 		-a \! \( -name '*.gz' -o -name '*.bz2' -o -name '*.xz' \) \
@@ -2016,7 +1967,7 @@ default_doc() {
 		[ $islink -eq 0 ] && $gzip -n -9 "$name"
 	done
 
-	rm -f "$subpkgdir/usr/share/info/dir"
+	rm -f "$subpkgdir/$TARGET_PREFIX/share/info/dir"
 }
 
 doc() {
@@ -2035,7 +1986,7 @@ default_dbg() {
 		if [ "$type" != ET_DYN ]; then
 			continue
 		fi
-		local ino dst=$subpkgdir/usr/lib/debug/${src#"$pkgbasedir"/*/}.debug
+		local ino dst=$subpkgdir/$TARGET_PREFIX/lib/debug/${src#"$pkgbasedir"/*/}.debug
 		mkdir -p "${dst%/*}"
 		ino=$(stat -c %i "$src")
 		if ! [ -e "$pkgbasedir/.dbg-tmp/$ino" ]; then
@@ -2063,14 +2014,14 @@ default_dev() {
 	pkgdesc="$pkgdesc (development files)"
 
 	cd "$pkgdir" || return 0
-	local libdirs=usr/
+	local libdirs=$TARGET_PREFIX/
 	[ -d lib/ ] && libdirs="lib/ $libdirs"
-	for i in usr/include usr/lib/pkgconfig usr/share/pkgconfig \
-			usr/share/aclocal usr/share/gettext \
-			usr/bin/*-config usr/share/vala/vapi \
-			usr/share/gir-[0-9]* usr/share/qt*/mkspecs \
-			usr/lib/qt*/mkspecs usr/lib/cmake usr/share/cmake \
-			usr/lib/glade/modules usr/share/glade/catalogs \
+	for i in $TARGET_PREFIX/include $TARGET_PREFIX/lib/pkgconfig $TARGET_PREFIX/share/pkgconfig \
+			$TARGET_PREFIX/share/aclocal $TARGET_PREFIX/share/gettext \
+			$TARGET_PREFIX/bin/*-config $TARGET_PREFIX/share/vala/vapi \
+			$TARGET_PREFIX/share/gir-[0-9]* $TARGET_PREFIX/share/qt*/mkspecs \
+			$TARGET_PREFIX/lib/qt*/mkspecs $TARGET_PREFIX/lib/cmake $TARGET_PREFIX/share/cmake \
+			$TARGET_PREFIX/lib/glade/modules $TARGET_PREFIX/share/glade/catalogs \
 			$(find . -name include -type d) \
 			$(subpackage_types_has static || find $libdirs \
 				-name '*.a' 2>/dev/null) \
@@ -2081,7 +2032,7 @@ default_dev() {
 		fi
 	done
 	# move *.so links needed when linking the apps to -dev packages
-	for i in lib/*.so usr/lib/*.so; do
+	for i in lib/*.so $TARGET_PREFIX/lib/*.so; do
 		[ -L "$i" ] && amove "$i"
 	done
 	return 0
@@ -2109,7 +2060,7 @@ default_static() {
 	pkgdesc="$pkgdesc (static library)"
 
 	cd "$pkgdir" || return 0
-	local libdirs=usr/lib
+	local libdirs=$TARGET_PREFIX/lib
 	[ -d lib/ ] && libdirs="lib/ $libdirs"
 
 	# move *.a static library
@@ -2127,7 +2078,7 @@ default_libs() {
 	depends="$depends_libs"
 	pkgdesc="$pkgdesc (libraries)"
 
-	amove 'lib/lib*.so.[0-9]*' 'usr/lib/lib*.so.[0-9]*' || :
+	amove 'lib/lib*.so.[0-9]*' "$TARGET_PREFIX/lib/lib*.so.[0-9]*" || :
 }
 
 libs() {
@@ -2152,7 +2103,7 @@ default_devhelp() {
 	pkgdesc="$pkgname - devhelp files"
 	install_if="$pkgname=$pkgver-r$pkgrel devhelp"
 
-	amove usr/share/devhelp
+	amove $TARGET_PREFIX/share/devhelp
 }
 
 devhelp() {
@@ -2165,7 +2116,7 @@ default_bashcomp() {
 	install_if="${subpkgname%-bash-completion}=$pkgver-r$pkgrel bash-completion"
 
 	cd "$pkgdir" || return 0
-	amove usr/share/bash-completion/completions
+	amove $TARGET_PREFIX/share/bash-completion/completions
 }
 
 bashcomp() {
@@ -2177,7 +2128,7 @@ default_zshcomp() {
 	pkgdesc="Zsh completions for $pkgname"
 	install_if="${subpkgname%-zsh-completion}=$pkgver-r$pkgrel zsh"
 
-	amove usr/share/zsh/site-functions
+	amove $TARGET_PREFIX/share/zsh/site-functions
 }
 
 zshcomp() {
@@ -2190,10 +2141,10 @@ default_fishcomp() {
 	install_if="${subpkgname%-fish-completion}=$pkgver-r$pkgrel fish"
 
 	cd "$pkgdir" || return 0
-	amove usr/share/fish/vendor_completions.d || :
+	amove $TARGET_PREFIX/share/fish/vendor_completions.d || :
 
-	amove usr/share/fish/completions &&
-		warning "fish completions for programs should be in /usr/share/fish/vendor_completions.d"
+	amove $TARGET_PREFIX/share/fish/completions &&
+		warning "fish completions for programs should be in /$TARGET_PREFIX/share/fish/vendor_completions.d"
 
 	return 0
 }
@@ -2208,7 +2159,7 @@ default_pyc() {
 
 	cd "$pkgdir" || return 0
 	local IFS=$'\n'
-	amove $(find usr/lib/python* -type d -name __pycache__)
+	amove $(find $TARGET_PREFIX/lib/python* -type d -name __pycache__)
 }
 
 pyc() {
@@ -2219,8 +2170,8 @@ default_nftrules() {
 	pkgdesc="$pkgdesc (nftables ruleset)"
 	install_if="nftables-rulesets ${subpkgname%-nftrules}=$pkgver-r$pkgrel"
 
-	if [ -d "$pkgdir"/usr/share/nftables.avail ]; then
-		amove 'usr/share/nftables.avail/*.nft'
+	if [ -d "$pkgdir"/$TARGET_PREFIX/share/nftables.avail ]; then
+		amove '$TARGET_PREFIX/share/nftables.avail/*.nft'
 	fi
 }
 
@@ -2558,7 +2509,7 @@ rootbld() {
 		"$BUILD_ROOT/$ABUILD_USERDIR" "$BUILD_ROOT/$aportsgit" \
 		"$BUILD_ROOT/$SRCDEST" "$BUILD_ROOT/$REPODEST" \
 		"$BUILD_ROOT/tmp/pkg" "$BUILD_ROOT/tmp/src" \
-		"$BUILD_ROOT/tmp/tmp" "$BUILD_ROOT/usr/bin" \
+		"$BUILD_ROOT/tmp/tmp" "$BUILD_ROOT/$TARGET_PREFIX/bin" \
 		"$REPODEST" "$BUILD_ROOT/$HOME/.ccache"
 
 	cp /etc/abuild.conf /etc/group /etc/passwd "$BUILD_ROOT/etc"
diff --git a/functions.sh.in b/functions.sh.in
index 7acb1a4..b9f3de3 100644
--- a/functions.sh.in
+++ b/functions.sh.in
@@ -3,6 +3,7 @@
 sysconfdir=@sysconfdir@
 sharedir=@sharedir@
 program=${0##*/}
+target_prefix="system"
 
 arch_to_hostspec() {
 	case "$1" in
@@ -70,12 +71,15 @@ hostspec_to_libc() {
 }
 
 readconfig() {
+    local _TARGET_PREFIX=/usr _FORBIDDEN_PREFIX
 	local _APORTSDIR _BUILDDIR _PKGDEST _SRCPKGDEST _REPODEST _SRCDEST _ABUILD_USERDIR
-	local _CC=gcc _CXX=g++ _LD=ld _CARCH _CHOST _CTARGET _CPPFLAGS _CFLAGS _CXXFLAGS _LDFLAGS
+	local _CC _CXX _LD _CARCH _CHOST _CTARGET _CPPFLAGS _CFLAGS _CXXFLAGS _LDFLAGS
 	local _JOBS _MAKEFLAGS _PACKAGER _USE_COLORS _USE_CCACHE
 	local _BUILDCC _BUILDCXX _BUILDLD _BUILDCPPFLAGS _BUILDCXXFLAGS _BUILDCFLAGS
 	local _BUILDLDFLAGS
 	local gitbase=
+    [ -n "${TARGET_PREFIX+x}" ] && _TARGET_PREFIX=$TARGET_PREFIX
+    [ -n "${FORBIDDEN_PREFIX+x}" ] && _FORBIDDEN_PREFIX=FORBIDDEN_PREFIX
 	[ -n "${APORTSDIR+x}" ] && _APORTSDIR=$APORTSDIR
 	[ -n "${BUILDDIR+x}" ] && _BUILDDIR=$BUILDDIR
 	[ -n "${PKGDEST+x}" ] && _PKGDEST=$PKGDEST
@@ -194,7 +198,7 @@ readconfig() {
 		# setup build root
 		[ -z "$CBUILDROOT" ] && export CBUILDROOT="$HOME/sysroot-$CTARGET_ARCH/"
 		# prepare pkg-config for cross building
-		[ -z "$PKG_CONFIG_PATH" ] && export PKG_CONFIG_PATH="${CBUILDROOT}/usr/lib/pkgconfig/"
+		[ -z "$PKG_CONFIG_PATH" ] && export PKG_CONFIG_PATH="${CBUILDROOT}/${target_prefix}/lib/pkgconfig/"
 		[ -z "$PKG_CONFIG_SYSROOT_DIR" ] && export PKG_CONFIG_SYSROOT_DIR="${CBUILDROOT}"
 		# libtool bug workaround for extra rpaths
 		[ -z "$lt_cv_sys_lib_dlsearch_path_spec" ] && \
@@ -217,6 +221,10 @@ readconfig() {
 			export CFLAGS="--sysroot=${CBUILDROOT} $CFLAGS"
 			export LDFLAGS="--sysroot=${CBUILDROOT} $LDFLAGS"
 		fi
+        if [ "$QNX_FHS" = "true" ]; then
+            export lt_cv_sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec ${CBUILDROOT}/${target_prefix}/lib"
+            export LIBRARY_PATH="${CBUILDROOT}/${target_prefix}/lib"
+        fi
 	fi
 	return 0
 }
-- 
2.34.1


From daee7c162491e28c6cdcb184a3ec060f1d092057 Mon Sep 17 00:00:00 2001
From: Leo Shen <i@szclsya.me>
Date: Fri, 31 Jan 2025 14:06:40 -0500
Subject: [PATCH 2/3] use QNX_VERSION instead

- more generic and can be used to check qnx version in build scripts
---
 functions.sh.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/functions.sh.in b/functions.sh.in
index b9f3de3..2e0b14e 100644
--- a/functions.sh.in
+++ b/functions.sh.in
@@ -221,7 +221,7 @@ readconfig() {
 			export CFLAGS="--sysroot=${CBUILDROOT} $CFLAGS"
 			export LDFLAGS="--sysroot=${CBUILDROOT} $LDFLAGS"
 		fi
-        if [ "$QNX_FHS" = "true" ]; then
+        if [ -n "$QNX_VERSION" ]; then
             export lt_cv_sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec ${CBUILDROOT}/${target_prefix}/lib"
             export LIBRARY_PATH="${CBUILDROOT}/${target_prefix}/lib"
         fi
-- 
2.34.1


From c398981b557792e86daee64092200e59a696507b Mon Sep 17 00:00:00 2001
From: Leo Shen <i@szclsya.me>
Date: Wed, 19 Mar 2025 13:56:17 -0400
Subject: [PATCH 3/3] qnx: TARGET_PREFIX -> PREFIX

---
 abuild.in       | 134 ++++++++++++++++++++++++------------------------
 functions.sh.in |   4 +-
 2 files changed, 69 insertions(+), 69 deletions(-)

diff --git a/abuild.in b/abuild.in
index d5394f5..7224d84 100644
--- a/abuild.in
+++ b/abuild.in
@@ -12,7 +12,7 @@ set -e
 
 program_version=@VERSION@
 sharedir=${ABUILD_SHAREDIR:-@sharedir@}
-# TARGET_PREFIX defined in functions.sh
+# PREFIX defined in functions.sh
 
 abuild_path=$(readlink -f $0)
 
@@ -804,14 +804,14 @@ postcheck() {
 				fi
 			done
 		done
-		if [ -d "$dir"/$TARGET_PREFIX/var ]; then
-			error "Found /$TARGET_PREFIX/var, localstatedir is most likely wrong"
+		if [ -d "$dir"/"$PREFIX"/var ]; then
+			error "Found $PREFIX/var, localstatedir is most likely wrong"
 			e=1
 		fi
 	    # /usr merge
 		for i in bin sbin lib; do
 			if [ -L "$dir"/$i ] || [ -e "$dir"/$i ]; then
-				warning "Packages must not put anything under /$i, use /$TARGET_PREFIX/${i##*s} instead"
+				warning "Packages must not put anything under /$i, use $PREFIX/${i##*s} instead"
 			fi
 		done
 	fi
@@ -822,22 +822,22 @@ postcheck() {
 	fi
 
 	# look for /usr/share/doc
-	if [ -e "$dir"/$TARGET_PREFIX/share/doc ] \
+	if [ -e "$dir"/"$PREFIX"/share/doc ] \
 			&& ! is_doc_pkg "$name"; then
-		warning "Found /$TARGET_PREFIX/share/doc but package name doesn't end with -doc"
+		warning "Found $PREFIX/share/doc but package name doesn't end with -doc"
 	fi
 	# look for /usr/share/devhelp
-	if [ -e "$dir"/$TARGET_PREFIX/share/devhelp ] \
+	if [ -e "$dir"/"$PREFIX"/share/devhelp ] \
 			&& ! is_devhelp_pkg "$name"; then
-		warning "Found /$TARGET_PREFIX/share/devhelp but package name doesn't end with -devhelp"
+		warning "Found $PREFIX/share/devhelp but package name doesn't end with -devhelp"
 	fi
 	# look for /usr/share/man
-	if [ -e "$dir"/$TARGET_PREFIX/share/man ]; then
+	if [ -e "$dir"/"$PREFIX"/share/man ]; then
 		if ! is_doc_pkg "$name"; then
-			warning "Found /$TARGET_PREFIX/share/man but package name doesn't end with -doc"
+			warning "Found $PREFIX/share/man but package name doesn't end with -doc"
 		fi
-		# check for uncompressed man pages
-		i=$(find "$dir"/$TARGET_PREFIX/share/man -name '*.[0-8]' -type f | sed -e 's/^/\t/')
+		# check for unc?ompressed man pages
+		i=$(find "$dir"/"$PREFIX"/share/man -name '*.[0-8]' -type f | sed -e 's/^/\t/')
 		if [ -n "$i" ]; then
 			error "Found uncompressed man pages:"
 			echo "$i"
@@ -847,7 +847,7 @@ postcheck() {
 	# look for pycache
 	# wildcard should always get the system python dir, and this is faster than
 	# trying to calculate the python version.
-	i="$(find "$dir"/$TARGET_PREFIX/lib/python* \( -type d -a -name "__pycache__" \) 2>/dev/null || :)"
+	i="$(find "$dir"/$PREFIX/lib/python* \( -type d -a -name "__pycache__" \) 2>/dev/null || :)"
 	if [ -n "$i" ] && [ "${name%-pyc}" = "$name" ]; then
 		warning "Found __pycache__ but package name doesn't end with -pyc"
 	fi
@@ -919,25 +919,25 @@ prepare_subpackages() {
 	done
 	postcheck "$pkgdir" "$pkgname" || return 1
 	# post check for /usr/share/locale
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/locale ]; then
-		warning "Found /$TARGET_PREFIX/share/locale"
+	if [ -d "$pkgdir"/"$PREFIX"/share/locale ]; then
+		warning "Found $PREFIX/share/locale"
 		warning2 "Maybe add \$pkgname-lang to subpackages?"
 	fi
 	# post check for shell completions
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/bash-completion ]; then
-		warning "Found /$TARGET_PREFIX/share/bash-completion"
+	if [ -d "$pkgdir"/"$PREFIX"/share/bash-completion ]; then
+		warning "Found $PREFIX/share/bash-completion"
 		warning2 "Add \$pkgname-bash-completion to subpackages"
 	fi
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/zsh/site-functions ]; then
-		warning "Found /$TARGET_PREFIX/share/zsh/site-functions"
+	if [ -d "$pkgdir"/"$PREFIX"/share/zsh/site-functions ]; then
+		warning "Found $PREFIX/share/zsh/site-functions"
 		warning2 "Add \$pkgname-zsh-completion to subpackages"
 	fi
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/fish/completions ]; then
-		warning "Found /$TARGET_PREFIX/share/fish/completions"
-		warning2 "fish completions for programs should be located in /$TARGET_PREFIX/share/fish/vendor_completions.d"
+	if [ -d "$pkgdir"/"$PREFIX"/share/fish/completions ]; then
+		warning "Found $PREFIX/share/fish/completions"
+		warning2 "fish completions for programs should be located in $PREFIX/share/fish/vendor_completions.d"
 	fi
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/fish/vendor_completions.d ]; then
-		warning "Found /$TARGET_PREFIX/share/fish/completions"
+	if [ -d "$pkgdir"/"$PREFIX"/share/fish/vendor_completions.d ]; then
+		warning "Found $PREFIX/share/fish/completions"
 		warning2 "Add \$pkgname-fish-completion to subpackages"
 	fi
 }
@@ -947,7 +947,7 @@ default_lang() {
 	install_if="$pkgname=$pkgver-r$pkgrel lang"
 	depends="$depends_lang"
 
-	amove ${langdir:-/$TARGET_PREFIX/share/locale}
+	amove "${langdir:-/$PREFIX/share/locale}"
 }
 
 lang() {
@@ -1235,9 +1235,9 @@ prepare_trace_rpaths() {
 			printf("%s\n", $i);
 		}
 	}' | sort -u >"$controldir"/.rpaths
-	if grep -q -x "/$TARGET_PREFIX/lib" "$controldir"/.rpaths; then
+	if grep -q -x "$PREFIX"/lib "$controldir"/.rpaths; then
 		# FIXME silence warning when $ORIGIN was used
-		warning "Redundant /$TARGET_PREFIX/lib in rpath found"
+		warning "Redundant $PREFIX/lib in rpath found"
 	fi
 	if grep '^/home/' "$controldir"/.rpaths; then
 		error "Has /home/... in rpath"
@@ -1263,12 +1263,12 @@ prepare_pkgconfig_provides() {
 	local dir="${subpkgdir:-$pkgdir}" v
 	options_has "!tracedeps" && return 0
 	cd "$dir" || return 1
-	for i in "$TARGET_PREFIX"/lib/pkgconfig/*.pc "$TARGET_PREFIX"/share/pkgconfig/*.pc; do
+	for i in "$PREFIX"/lib/pkgconfig/*.pc "$PREFIX"/share/pkgconfig/*.pc; do
 		if ! [ -e "$i" ]; then
 			continue
 		fi
 		local f=${i##*/}
-		v=$(PKG_CONFIG_PATH="$dir"/"$TARGET_PREFIX"/lib/pkgconfig:"$dir"/"$TARGET_PREFIX"/share/pkgconfig \
+		v=$(PKG_CONFIG_PATH="$dir"/"$PREFIX"/lib/pkgconfig:"$dir"/"$PREFIX"/share/pkgconfig \
 			PKG_CONFIG_MAXIMUM_TRAVERSE_DEPTH=1 pkg-config \
 			--modversion ${f%.pc} | sed -E -e 's/-(alpha|beta|rc|pre)/_\1/')
 		v=${v#v}
@@ -1281,7 +1281,7 @@ prepare_command_provides() {
 	local dir="${subpkgdir:-$pkgdir}"
 	options_has "!tracedeps" && return 0
 	cd "$dir" || return 1
-	for i in bin/* sbin/* "$TARGET_PREFIX"/bin/* "$TARGET_PREFIX"/sbin/*; do
+	for i in bin/* sbin/* "$PREFIX"/bin/* "$PREFIX"/sbin/*; do
 		# We can't check symlinks properly with absolute paths,
 		# subpackages and dependencies so assume that they are commands
 		if ! [ -L "$i" ]; then
@@ -1309,7 +1309,7 @@ prepare_py_provides() {
 	# Find all directories under site-packages, ignore __pycache__ and
 	# .egg-info packages, store the basename with the proper pyX.Y prefix
 	# one per-line
-	py_providers="$(find $TARGET_PREFIX'/lib/python'*/site-packages \
+	py_providers="$(find $PREFIX'/lib/python'*/site-packages \
 		-mindepth 1 -maxdepth 1 \
 		-type f -iname '*.py' -o -type d \
 		-print0 \
@@ -1329,7 +1329,7 @@ prepare_py_provides() {
 		# Find out which version of python we are building for
 		# this will find out by looking at the MAJOR and MINOR
 		# versions in /usr/lib/pythonMAJOR.MINOR
-		pyver="${d##*$TARGET_PREFIX/lib/python}"
+		pyver="${d##*$PREFIX/lib/python}"
 		pyver="${pyver%%/*}"
 
 		# Strip the .py prefix if it exists
@@ -1434,7 +1434,7 @@ find_so_files() {
 	rpaths=$(cat "$1")
 	shift
 	while [ $# -gt 0 ]; do
-		real_so_path "$1" /$TARGET_PREFIX/lib /lib $rpaths || return 1
+		real_so_path "$1" "$PREFIX"/lib /lib $rpaths || return 1
 		shift
 	done
 	return 0
@@ -1473,7 +1473,7 @@ trace_apk_deps() {
 
 	msg "Tracing dependencies..."
 	# add pkgconfig if usr/lib/pkgconfig is found
-	if [ -d "$pkgbasedir"/$name/$TARGET_PREFIX/lib/pkgconfig ] || [ -d "$pkgbasedir"/$name/$TARGET_PREFIX/share/pkgconfig ] \
+	if [ -d "$pkgbasedir"/"$name"/"$PREFIX"/lib/pkgconfig ] || [ -d "$pkgbasedir"/$name/"$PREFIX"/share/pkgconfig ] \
 			&& ! grep -q '^depend = pkgconfig' "$dir"/.PKGINFO; then
 		autodeps="$autodeps pkgconfig"
 	fi
@@ -1522,7 +1522,7 @@ trace_apk_deps() {
 		else
 			warning "Could not find any provider for pc:$i"
 			for d in share lib; do
-				local pcfile=/$TARGET_PREFIX/$d/pkgconfig/"${i%%[<>=]*}".pc
+				local pcfile="$PREFIX"/"$d"/pkgconfig/"${i%%[<>=]*}".pc
 				if [ -e "$pcfile" ]; then
 					owner=$($APK $apkroot info --quiet --who-owns $pcfile)
 					warning "${owner:-package providing $pcfile} needs to be rebuilt"
@@ -1554,7 +1554,7 @@ trace_apk_deps() {
 
 find_scanelf_paths() {
 	local datadir="$1"
-	local paths="$datadir/lib:$datadir/$TARGET_PREFIX/lib" i= rpaths=
+	local paths="$datadir/lib:$datadir/$PREFIX/lib" i= rpaths=
 	if [ -n "$ldpath" ]; then
 		paths="$paths:$(echo "${datadir}${ldpath}" | sed "s|:|:$datadir|g")"
 	fi
@@ -1698,7 +1698,7 @@ scan_python3_dependency() {
 	local controldir="$2" datadir="$3"
 	local dir_count=0
 	local site_pkg_dir
-	for site_pkg_dir in "$datadir"/"$TARGET_PREFIX"/lib/python3*/site-packages; do
+	for site_pkg_dir in "$datadir"/"$PREFIX"/lib/python3*/site-packages; do
 		if ! [ -d "$site_pkg_dir" ]; then
 			# empty iteration
 			continue
@@ -1708,7 +1708,7 @@ scan_python3_dependency() {
 			error "package contains python3 modules for conflicting python3 versions"
 			return 1
 		fi
-		local pyver="${site_pkg_dir##*$TARGET_PREFIX/lib/python}"
+		local pyver="${site_pkg_dir##*$PREFIX/lib/python}"
 		pyver="${pyver%%/*}"
 		if [ -n "$pyver" ] && [ "${subpkgname:-$pkgname}" != python3 ]; then
 			echo "python3~$pyver" \
@@ -1725,7 +1725,7 @@ scan_pkgconfig_depends() {
 	name="$(pkginfo_val pkgname "$controldir"/.PKGINFO)"
 	datadir="$pkgbasedir"/$name
 	for i in $(sort -u "$provides_pc"); do
-		PKG_CONFIG_PATH="$datadir"/"$TARGET_PREFIX"/lib/pkgconfig:"$datadir"/"$TARGET_PREFIX"/share/pkgconfig \
+		PKG_CONFIG_PATH="$datadir"/"$PREFIX"/lib/pkgconfig:"$datadir"/"$PREFIX"/share/pkgconfig \
 				pkg-config \
 				--print-requires \
 				--print-requires-private ${i%=*} \
@@ -1758,10 +1758,10 @@ create_apks() {
 	local file= dir= name= ver= apk= datadir= size= i= gzip=
 	gzip=$(command -v pigz || echo gzip)
 	if ! options_has "keepdirs"; then
-		rmdir "$pkgdir"/"$TARGET_PREFIX"/lib \
-			"$pkgdir"/"$TARGET_PREFIX"/bin \
-			"$pkgdir"/"$TARGET_PREFIX"/share \
-			"$pkgdir"/"$TARGET_PREFIX" \
+		rmdir "$pkgdir"/"$PREFIX"/lib \
+			"$pkgdir"/"$PREFIX"/bin \
+			"$pkgdir"/"$PREFIX"/share \
+			"$pkgdir"/"$PREFIX" \
 			"$pkgdir"/etc/ \
 			"$pkgdir"/lib/ \
 			2>/dev/null || :
@@ -1931,11 +1931,11 @@ default_doc() {
 
 	local i
 	for i in doc man info html sgml licenses gtk-doc ri help; do
-		amove "$TARGET_PREFIX"/share/"$i" || :
+		amove "$PREFIX"/share/"$i" || :
 	done
 
 	# compress man pages
-	local mandir="$subpkgdir"/"$TARGET_PREFIX"/share/man
+	local mandir="$subpkgdir"/"$PREFIX"/share/man
 	[ -d "$mandir" ] && find "$mandir" -type l \
 		-a \( -name \*.[0-9n] -o -name \*.[0-9n][a-z]* \) \
 		-a \! \( -name '*.gz' -o -name '*.bz2' -o -name '*.xz' \) \
@@ -1967,7 +1967,7 @@ default_doc() {
 		[ $islink -eq 0 ] && $gzip -n -9 "$name"
 	done
 
-	rm -f "$subpkgdir/$TARGET_PREFIX/share/info/dir"
+	rm -f "$subpkgdir/$PREFIX/share/info/dir"
 }
 
 doc() {
@@ -1986,7 +1986,7 @@ default_dbg() {
 		if [ "$type" != ET_DYN ]; then
 			continue
 		fi
-		local ino dst=$subpkgdir/$TARGET_PREFIX/lib/debug/${src#"$pkgbasedir"/*/}.debug
+		local ino dst=$subpkgdir/"$PREFIX"/lib/debug/${src#"$pkgbasedir"/*/}.debug
 		mkdir -p "${dst%/*}"
 		ino=$(stat -c %i "$src")
 		if ! [ -e "$pkgbasedir/.dbg-tmp/$ino" ]; then
@@ -2014,14 +2014,14 @@ default_dev() {
 	pkgdesc="$pkgdesc (development files)"
 
 	cd "$pkgdir" || return 0
-	local libdirs=$TARGET_PREFIX/
+	local libdirs="$PREFIX"/
 	[ -d lib/ ] && libdirs="lib/ $libdirs"
-	for i in $TARGET_PREFIX/include $TARGET_PREFIX/lib/pkgconfig $TARGET_PREFIX/share/pkgconfig \
-			$TARGET_PREFIX/share/aclocal $TARGET_PREFIX/share/gettext \
-			$TARGET_PREFIX/bin/*-config $TARGET_PREFIX/share/vala/vapi \
-			$TARGET_PREFIX/share/gir-[0-9]* $TARGET_PREFIX/share/qt*/mkspecs \
-			$TARGET_PREFIX/lib/qt*/mkspecs $TARGET_PREFIX/lib/cmake $TARGET_PREFIX/share/cmake \
-			$TARGET_PREFIX/lib/glade/modules $TARGET_PREFIX/share/glade/catalogs \
+	for i in "$PREFIX"/include "$PREFIX"/lib/pkgconfig "$PREFIX"/share/pkgconfig \
+			"$PREFIX"/share/aclocal "$PREFIX"/share/gettext \
+			"$PREFIX"/bin/*-config "$PREFIX"/share/vala/vapi \
+			"$PREFIX"/share/gir-[0-9]* "$PREFIX"/share/qt*/mkspecs \
+			"$PREFIX"/lib/qt*/mkspecs "$PREFIX"/lib/cmake "$PREFIX"/share/cmake \
+			"$PREFIX"/lib/glade/modules "$PREFIX"/share/glade/catalogs \
 			$(find . -name include -type d) \
 			$(subpackage_types_has static || find $libdirs \
 				-name '*.a' 2>/dev/null) \
@@ -2032,7 +2032,7 @@ default_dev() {
 		fi
 	done
 	# move *.so links needed when linking the apps to -dev packages
-	for i in lib/*.so $TARGET_PREFIX/lib/*.so; do
+	for i in lib/*.so "$PREFIX"/lib/*.so; do
 		[ -L "$i" ] && amove "$i"
 	done
 	return 0
@@ -2060,7 +2060,7 @@ default_static() {
 	pkgdesc="$pkgdesc (static library)"
 
 	cd "$pkgdir" || return 0
-	local libdirs=$TARGET_PREFIX/lib
+	local libdirs="$PREFIX"/lib
 	[ -d lib/ ] && libdirs="lib/ $libdirs"
 
 	# move *.a static library
@@ -2078,7 +2078,7 @@ default_libs() {
 	depends="$depends_libs"
 	pkgdesc="$pkgdesc (libraries)"
 
-	amove 'lib/lib*.so.[0-9]*' "$TARGET_PREFIX/lib/lib*.so.[0-9]*" || :
+	amove 'lib/lib*.so.[0-9]*' "$PREFIX/lib/lib*.so.[0-9]*" || :
 }
 
 libs() {
@@ -2103,7 +2103,7 @@ default_devhelp() {
 	pkgdesc="$pkgname - devhelp files"
 	install_if="$pkgname=$pkgver-r$pkgrel devhelp"
 
-	amove $TARGET_PREFIX/share/devhelp
+	amove "$PREFIX"/share/devhelp
 }
 
 devhelp() {
@@ -2116,7 +2116,7 @@ default_bashcomp() {
 	install_if="${subpkgname%-bash-completion}=$pkgver-r$pkgrel bash-completion"
 
 	cd "$pkgdir" || return 0
-	amove $TARGET_PREFIX/share/bash-completion/completions
+	amove "$PREFIX"/share/bash-completion/completions
 }
 
 bashcomp() {
@@ -2128,7 +2128,7 @@ default_zshcomp() {
 	pkgdesc="Zsh completions for $pkgname"
 	install_if="${subpkgname%-zsh-completion}=$pkgver-r$pkgrel zsh"
 
-	amove $TARGET_PREFIX/share/zsh/site-functions
+	amove "$PREFIX"/share/zsh/site-functions
 }
 
 zshcomp() {
@@ -2141,10 +2141,10 @@ default_fishcomp() {
 	install_if="${subpkgname%-fish-completion}=$pkgver-r$pkgrel fish"
 
 	cd "$pkgdir" || return 0
-	amove $TARGET_PREFIX/share/fish/vendor_completions.d || :
+	amove "$PREFIX"/share/fish/vendor_completions.d || :
 
-	amove $TARGET_PREFIX/share/fish/completions &&
-		warning "fish completions for programs should be in /$TARGET_PREFIX/share/fish/vendor_completions.d"
+	amove "$PREFIX"/share/fish/completions &&
+		warning "fish completions for programs should be in $PREFIX/share/fish/vendor_completions.d"
 
 	return 0
 }
@@ -2159,7 +2159,7 @@ default_pyc() {
 
 	cd "$pkgdir" || return 0
 	local IFS=$'\n'
-	amove $(find $TARGET_PREFIX/lib/python* -type d -name __pycache__)
+	amove $(find "$PREFIX"/lib/python* -type d -name __pycache__)
 }
 
 pyc() {
@@ -2170,8 +2170,8 @@ default_nftrules() {
 	pkgdesc="$pkgdesc (nftables ruleset)"
 	install_if="nftables-rulesets ${subpkgname%-nftrules}=$pkgver-r$pkgrel"
 
-	if [ -d "$pkgdir"/$TARGET_PREFIX/share/nftables.avail ]; then
-		amove '$TARGET_PREFIX/share/nftables.avail/*.nft'
+	if [ -d "$pkgdir"/"$PREFIX"/share/nftables.avail ]; then
+		amove '$PREFIX/share/nftables.avail/*.nft'
 	fi
 }
 
@@ -2509,7 +2509,7 @@ rootbld() {
 		"$BUILD_ROOT/$ABUILD_USERDIR" "$BUILD_ROOT/$aportsgit" \
 		"$BUILD_ROOT/$SRCDEST" "$BUILD_ROOT/$REPODEST" \
 		"$BUILD_ROOT/tmp/pkg" "$BUILD_ROOT/tmp/src" \
-		"$BUILD_ROOT/tmp/tmp" "$BUILD_ROOT/$TARGET_PREFIX/bin" \
+		"$BUILD_ROOT/tmp/tmp" "$BUILD_ROOT/$PREFIX/bin" \
 		"$REPODEST" "$BUILD_ROOT/$HOME/.ccache"
 
 	cp /etc/abuild.conf /etc/group /etc/passwd "$BUILD_ROOT/etc"
diff --git a/functions.sh.in b/functions.sh.in
index 2e0b14e..990c112 100644
--- a/functions.sh.in
+++ b/functions.sh.in
@@ -71,14 +71,14 @@ hostspec_to_libc() {
 }
 
 readconfig() {
-    local _TARGET_PREFIX=/usr _FORBIDDEN_PREFIX
+    local _PREFIX=/usr _FORBIDDEN_PREFIX
 	local _APORTSDIR _BUILDDIR _PKGDEST _SRCPKGDEST _REPODEST _SRCDEST _ABUILD_USERDIR
 	local _CC _CXX _LD _CARCH _CHOST _CTARGET _CPPFLAGS _CFLAGS _CXXFLAGS _LDFLAGS
 	local _JOBS _MAKEFLAGS _PACKAGER _USE_COLORS _USE_CCACHE
 	local _BUILDCC _BUILDCXX _BUILDLD _BUILDCPPFLAGS _BUILDCXXFLAGS _BUILDCFLAGS
 	local _BUILDLDFLAGS
 	local gitbase=
-    [ -n "${TARGET_PREFIX+x}" ] && _TARGET_PREFIX=$TARGET_PREFIX
+    [ -n "${PREFIX+x}" ] && _PREFIX=$PREFIX
     [ -n "${FORBIDDEN_PREFIX+x}" ] && _FORBIDDEN_PREFIX=FORBIDDEN_PREFIX
 	[ -n "${APORTSDIR+x}" ] && _APORTSDIR=$APORTSDIR
 	[ -n "${BUILDDIR+x}" ] && _BUILDDIR=$BUILDDIR
-- 
2.34.1

